# Install minimal gnome
sudo apt install --yes --no-install-recommends gnome-core

# Install apps
sudo apt-get install --show-progress --yes \
    awscli \
    cheese \
    cups \
    cups-pk-helper \
    curl \
    dconf-editor \
    file-roller \
    foliate \
    gnome-clocks \
    gnome-epub-thumbnailer \
    gnome-shell-extension-manager \
    gnome-shell-extensions \
    gnome-shell-extensions-extra \
    gnome-firmware \
    gnome-power-manager \
    gnome-software-plugin-snap \
    gnome-sound-recorder \
    gnome-tweaks \
    git \
    libproxy1-plugin-networkmanager \
    low-memory-monitor \
    nautilus-share \
    neofetch \
    neovim \
    network-manager-gnome \
    network-manager-config-connectivity-debian \
    network-manager-openconnect-gnome \
    network-manager-openvpn-gnome \
    network-manager-ssh-gnome \
    network-manager-vpnc-gnome \
    nodejs \
    ooo-thumbnailer \
    pdfarranger \
    plymouth-themes \
    printer-driver-cups-pdf \
    snapd \
    shotwell \
    smbclient \
    ssh-askpass-gnome \
    synaptic \
    task-laptop \
    unattended-upgrades \
    wireguard \
    virt-manager \
    qemu-system-x86 \
    qemu-utils \
    libvirt-daemon-system

# Install firefox
sudo install -d -m 0755 /etc/apt/keyrings && \
    wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | \
        sudo tee /etc/apt/keyrings/packages.mozilla.org.asc > /dev/null && \
    gpg -n -q --import --import-options import-show /etc/apt/keyrings/packages.mozilla.org.asc | \
        awk '/pub/{getline; gsub(/^ +| +$/,""); if($0 == "35BAA0B33E9EB396F59CA838C0BA5CE6DC6315A3") \ 
        print "\nThe key fingerprint matches ("$0").\n"; \ 
        else print "\nVerification failed: the fingerprint ("$0") does not match the expected one.\n"}' && \
    echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | \
        sudo tee -a /etc/apt/sources.list.d/mozilla.list > /dev/null && \
    sudo apt-get update && sudo apt-get install firefox

# Install vscode
sudo apt-get install wget gpg && \
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg && \
    sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg && \
    echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] \
        https://packages.microsoft.com/repos/code stable main" | \
        sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null && \
    rm -f packages.microsoft.gpg && \
    sudo apt install apt-transport-https && \
    sudo apt update && \
    sudo apt install code

# Configure time zone
sudo dpkg-reconfigure tzdata

# Configure locales
sudo dpkg-reconfigure locales

# Install nvidia driver for GTX 1650
sudo apt install nvidia-detect && \
    nvidia-detect

sudo apt install nvidia-driver firmware-misc-nonfree

# Fix network on gnome
sudo rm /etc/network/interfaces 

# Install snaps
sudo snap install core
sudo snap install vlc dbeaver-ce spotify slack libreoffice amz-workspaces

# Install docker
sudo apt-get update && \
    sudo apt-get install ca-certificates && \
    sudo install -m 0755 -d /etc/apt/keyrings && \
    sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc && \
    sudo chmod a+r /etc/apt/keyrings/docker.asc

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] \
    https://download.docker.com/linux/debian bookworm stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update && \
    sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y

sudo groupadd docker
sudo usermod -aG docker $USER

# Install clojure
sudo apt install -y openjdk-17-jdk \
    clojure

# Install dotnet
wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \
    sudo dpkg -i packages-microsoft-prod.deb && \
    rm packages-microsoft-prod.deb

sudo apt-get update && \
  sudo apt-get install -y dotnet-sdk-8.0 dotnet-sdk-6.0

# Config git
git config --global user.name "Douglas Moura"
git config --global user.email "douuuglas@gmail.com"
git config --global credential.helper store