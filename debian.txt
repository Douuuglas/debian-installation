# Install minimal gnome
sudo apt install -y --no-install-recommends gnome-core

# Install apps
sudo apt install -y --show-progress \
    awscli \
    bat \
    cheese \
    cups \
    cups-pk-helper \
    curl \
    dconf-editor \
    flameshot \
    file-roller \
    foliate \
    ffmpeg \
    fzf \
    gnome-clocks \
    gnome-epub-thumbnailer \
    gnome-shell-extension-manager \
    gnome-shell-extensions \
    gnome-shell-extensions-extra \
    gnome-firmware \
    gnome-power-manager \
    gnome-sound-recorder \
    gnome-tweaks \
    git \
    jq \
    kcat \
    libreoffice \
    libproxy1-plugin-networkmanager \
    low-memory-monitor \
    nautilus-share \
    neofetch \
    neovim \
    network-manager-gnome \
    network-manager-config-connectivity-debian \
    network-manager-openconnect-gnome \
    network-manager-openvpn-gnome \
    network-manager-ssh-gnome \
    network-manager-vpnc-gnome \
    nodejs \
    npm \
    ooo-thumbnailer \
    pandoc \
    pdfarranger \
    plymouth-themes \
    printer-driver-cups-pdf \
    python3.11-venv \
    redis-cli \
    ruby \
    solaar \
    shotwell \
    smbclient \
    sudo \
    ssh-askpass-gnome \
    synaptic \
    task-laptop \
    uuid-runtime \
    unattended-upgrades \
    wireguard \
    virt-manager \
    vlc \
    qemu-system-x86 \
    qemu-utils \
    libvirt-daemon-system \
    yq

# Gnome shortcuts
Settings > Keyboard > Keyboard Shortcuts > View and Customize Shortcuts > Custom Shortcuts > Add Shortcuts
Name: Launch Terminal, Command: gnome-terminal, Shortcut: [Super + t]

Settings > Keyboard > Keyboard Shortcuts > View and Customize Shortcuts > Custom Shortcuts > Add Shortcuts
Name: Launch Flameshot, Command: flameshot gui, Shortcut: [Super + x]

Settings > Keyboard > Keyboard Shortcuts > View and Customize Shortcuts: Home folder
Shortcut: [Super + f]

Settings > Keyboard > Keyboard Shortcuts > View and Customize Shortcuts: Launch web browser
hortcut: [Super + b]

Settings > Keyboard > Keyboard Shortcuts > View and Customize Shortcuts: Maximize window vertically
Shortcut: [Ctrl + Super + â†‘]

# Configure time zone
sudo dpkg-reconfigure tzdata

# Configure locales
sudo dpkg-reconfigure locales

# Install nvidia driver for GTX 1650
sudo apt install -y nvidia-detect && \
    nvidia-detect

sudo apt install -y nvidia-driver firmware-misc-nonfree xserver-xorg-input-all

# Install firefox
sudo install -d -m 0755 /usr/share/keyrings && \
    wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | \
        sudo tee /usr/share/keyrings/packages.mozilla.org.asc > /dev/null && \
    gpg -n -q --import --import-options import-show /usr/share/keyrings/packages.mozilla.org.asc | \
        awk '/pub/{getline; gsub(/^ +| +$/,""); if($0 == "35BAA0B33E9EB396F59CA838C0BA5CE6DC6315A3") \ 
        print "\nThe key fingerprint matches ("$0").\n"; \ 
        else print "\nVerification failed: the fingerprint ("$0") does not match the expected one.\n"}' && \
    echo "deb [signed-by=/usr/share/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | \
        sudo tee -a /etc/apt/sources.list.d/mozilla.list > /dev/null && \
    sudo apt update && sudo apt install -y firefox

# Install spotify
curl -sS https://download.spotify.com/debian/pubkey_6224F9941A8AA6D1.gpg | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg && \
    echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list && \
    sudo apt-get update && \
    sudo apt-get install spotify-client

# Install keybase
cd ~/Downloads && \
    curl --remote-name https://prerelease.keybase.io/keybase_amd64.deb && \
    sudo apt install ./keybase_amd64.deb && \
    rm keybase_amd64.deb

# Install slack
cd ~/Downloads && \
    curl --remote-name https://downloads.slack-edge.com/desktop-releases/linux/x64/4.39.88/slack-desktop-4.39.88-amd64.deb && \
    sudo apt install ./slack-desktop-4.39.88-amd64.deb && \
    rm slack-desktop-4.39.88-amd64.deb

# Install dbeaver-ce
sudo  wget -O /usr/share/keyrings/dbeaver.gpg.key https://dbeaver.io/debs/dbeaver.gpg.key && \
    echo "deb [signed-by=/usr/share/keyrings/dbeaver.gpg.key] https://dbeaver.io/debs/dbeaver-ce /" | sudo tee /etc/apt/sources.list.d/dbeaver.list && \
    sudo apt update && \
    sudo apt install -y dbeaver-ce

# Install docker
sudo apt update && \
    sudo apt install -y ca-certificates && \
    sudo install -m 0755 -d /usr/share/keyrings && \
    sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /usr/share/keyrings/docker.asc && \
    sudo chmod a+r /usr/share/keyrings/docker.asc

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.asc] \
    https://download.docker.com/linux/debian bookworm stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update && \
    sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin && \
    sudo usermod -aG docker $USER

# Install vscode
curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc && \
    echo "deb [arch=amd64,arm64,armhf signed-by=/usr/share/keyrings/packages.microsoft.gpg] \
        https://packages.microsoft.com/repos/code stable main" | \
        sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null && \
    sudo apt install -y apt-transport-https && \
    sudo apt update && \
    sudo apt install -y code

# Install sql-cli
curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc && \
    curl https://packages.microsoft.com/config/debian/12/prod.list | sudo tee /etc/apt/sources.list.d/microsoft-prod.list && \
    sudo apt-get update && \
    sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 mssql-tools

# Install dotnet
curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc && \
    curl https://packages.microsoft.com/config/debian/12/prod.list | sudo tee /etc/apt/sources.list.d/microsoft-prod.list && \
    sudo apt update && \
    sudo apt install -y dotnet-sdk-8.0 dotnet-sdk-6.0

# Install clojure
cd ~/Downloads && \
    sudo apt install -y openjdk-17-jdk  && \
    curl -L -O https://github.com/clojure/brew-install/releases/latest/download/linux-install.sh && \
    chmod +x linux-install.sh  && \
    sudo ./linux-install.sh  && \
    rm linux-install.sh

# Install python 3.12.4
cd ~/Downloads && \
    apt install -y build-essential libssl-dev zlib1g-dev libbz2-dev \
        libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
        xz-utils tk-dev libffi-dev liblzma-dev python3-openssl git && \
    wget https://www.python.org/ftp/python/3.12.4/Python-3.12.4.tgz && \
    tar -xvf Python-3.12.4.tgz && \
    cd Python-3.12.4 && \
    ./configure --enable-optimizations && \
    make -j 8 && \
    sudo make altinstall && \
    cd .. && \
    rm -rf Python-3.12.4.tgz Python-3.12.4 && \
    python3.12 -m venv ~/.venv/python3.12

# Install jetbrains-tools
wget -O ~/Downloads/jetbrains-toolbox.tar.gz -c https://download-cdn.jetbrains.com/toolbox/jetbrains-toolbox-2.4.0.32175.tar.gz && \
    sudo tar -xzf jetbrains-toolbox.tar.gz -C /opt && \
    rm ~/Downloads/jetbrains-toolbox.tar.gz

# Config git
git config --global user.name "Douglas Moura" && \
    git config --global user.email "douuuglas@gmail.com" && \
    git config --global credential.helper store

# Replace boot text with splash screen
sudo sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="quiet"/GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"/' /etc/default/grub && sudo update-grub2

# Fix network on gnome
sudo sed -i 's/managed=false/managed=true/' /etc/NetworkManager/NetworkManager.conf && \
    sudo mv /etc/network/interfaces /etc/network/interfaces.bak && \
    sudo reboot